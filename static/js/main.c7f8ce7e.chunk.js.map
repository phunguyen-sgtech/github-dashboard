{"version":3,"sources":["actions/index.js","reducers/index.js","components/NotFound.js","components/Tittle.js","components/MyCard.js","components/OrgItem.js","components/OrgList.js","components/RepoItem.js","components/RepoList.js","containers/index.js","App.js","serviceWorker.js","index.js"],"names":["REPOS_API_URL","userName","ORGS_API_URL","initialState","loading","repos","orgs","NotFound","style","paddingLeft","Title","title","Col","xs","className","MyCard","props","name","description","imgUrl","url","Card","width","minHeight","Img","as","variant","src","Body","Text","Button","href","target","OrgItem","OrgList","data","Row","length","map","d","md","padding","key","avatarUrl","urla","RepoItem","htmlUrl","RepoList","ListRepoAndOrg","dispatch","useDispatch","useSelector","state","useState","search","setSearch","Container","Form","Control","data-testid","placeholder","onChange","e","value","onClick","type","Promise","all","fetch","then","a","reposRs","orgsRs","json","reposData","orgsData","reposList","orgsList","convertedReposList","convertedOrgsList","isErrRepo","message","isErrOrgs","r","html_url","o","avatar_url","login","payload","catch","err","console","error","disabled","Spinner","animation","App","Boolean","window","location","hostname","match","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7f8ce7e.chunk.js","sourcesContent":["export const FETCHING_REPOS_INIT = \"FETCHING_REPOS_INIT\";\nexport const FETCHING_REPOS_SC = \"FETCHING_REPOS_SC\";\nexport const FETCHING_REPOS_FAILED = \"FETCHING_REPOS_FAILED\";\n\nconst REPOS_API_URL = userName =>\n  `https://api.github.com/users/${userName}/repos?order=desc&page=1&per_page=10&sort=updated_at`;\nconst ORGS_API_URL = userName =>\n  `https://api.github.com/users/${userName}/orgs?order=desc&page=1&per_page=10&sort=updated_at`;\n\nexport const fetchRepos = () => ({\n  type: FETCHING_REPOS_INIT\n});\n\nexport const fetchReposSC = data => ({\n  type: FETCHING_REPOS_SC,\n  payload: data\n});\n\nexport const fetchReposFailed = () => ({\n  type: FETCHING_REPOS_FAILED\n});\n\nexport const fetchReposAPI = userName => dispatch => {\n  dispatch(fetchRepos());\n  Promise.all([fetch(REPOS_API_URL(userName)), fetch(ORGS_API_URL(userName))])\n    .then(async ([reposRs, orgsRs]) => {\n      const reposData = await reposRs.json();\n      const orgsData = await orgsRs.json();\n      return [reposData, orgsData];\n    })\n    .then(([reposList, orgsList]) => {\n      let convertedReposList = [];\n      let convertedOrgsList = [];\n      const isErrRepo = reposList.message === \"Not Found\";\n\n      const isErrOrgs = orgsList.message === \"Not Found\";\n      if (!isErrRepo) {\n        convertedReposList = (reposList || []).map(r => ({\n          name: r.name,\n          description: r.description || 'description',\n          htmlUrl: r.html_url\n        }))\n      }\n     \n      if (!isErrOrgs) {\n        convertedOrgsList = (orgsList || []).map(o => ({\n          description: o.description || 'description',\n          avatarUrl: o.avatar_url,\n          url: `https://github.com/${o.login}`\n        }))\n      }\n   \n      dispatch(fetchReposSC({ reposList: convertedReposList, orgsList: convertedOrgsList }));\n    })\n    .catch(err => {\n      console.error(\"err\", err);\n      dispatch(fetchReposFailed());\n    });\n};\n","import {\n  FETCHING_REPOS_INIT,\n  FETCHING_REPOS_SC,\n  FETCHING_REPOS_FAILED\n} from \"../actions\";\nconst initialState = {\n  loading: false,\n  repos: [],\n  orgs: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCHING_REPOS_INIT:\n      return {\n        ...state,\n        loading: true,\n        repos: [],\n        orgs: []\n      };\n\n    case FETCHING_REPOS_SC:\n      const { payload } = action;\n      return {\n        ...state,\n        loading: false,\n        repos: [...state.repos, ...payload.reposList],\n        orgs: [...state.repos, ...payload.orgsList]\n      };\n    case FETCHING_REPOS_FAILED:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div style={{paddingLeft: '30px'}}>\r\n        There is no data\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Col } from 'react-bootstrap'\r\n\r\nconst Title = ({ title }) => {\r\n    return (\r\n    <Col xs={12} className=\"title\">\r\n        {title}\r\n    </Col>)\r\n\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport { Card,Button } from 'react-bootstrap'\r\n\r\n\r\nconst MyCard = props => {\r\n    const { name, description, imgUrl, url } = props\r\n    return (<Card style={{ width: '100%', minHeight: '160px' }}>\r\n        {imgUrl && (<Card.Img as=\"img\" variant=\"top\" className=\"img-block\" src={imgUrl} />)} \r\n        <Card.Body>\r\n            <Card.Title>{name}</Card.Title>\r\n            <Card.Text className=\"text-ell\">\r\n                {description || ' '}\r\n            </Card.Text>\r\n            <Button variant=\"primary\" href={url} target=\"blank\">Go</Button>\r\n        </Card.Body>\r\n    </Card>)\r\n}\r\n\r\nexport default MyCard","import React from 'react'\r\nimport MyCard from './MyCard'\r\n\r\nconst OrgItem = ({ name, description, url, imgUrl }) => {\r\n    return <MyCard name={name} description={description} imgUrl={imgUrl} url={url} />\r\n}\r\n\r\nexport default OrgItem","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nimport NotFound from './NotFound';\r\nimport Title from './Tittle'\r\nimport OrgItem from './OrgItem';\r\n\r\n\r\n\r\nconst OrgList = ({ data = [] }) => {\r\n    const renderContent = () => {\r\n        if (data.length === 0)\r\n            return (<NotFound />)\r\n        return (data?.map(d => (\r\n            <Col md={6} xs={12} style={{ padding: '20px' }} key={d.avatarUrl}>\r\n                <OrgItem name={d.name} description={d.description} imgUrl={d.avatarUrl} url={d.urla} />\r\n            </Col>)))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title title={'List of orgnizations'} />\r\n            <Row>\r\n                {renderContent()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default OrgList","import React from 'react'\r\nimport MyCard from './MyCard'\r\n\r\nconst RepoItem = ({ name, description, htmlUrl }) => {\r\n    return <MyCard name={name} description={description} url={htmlUrl} />\r\n}\r\n\r\nexport default RepoItem","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nimport RepoItem from './RepoItem';\r\nimport NotFound from './NotFound';\r\nimport Title from './Tittle'\r\n\r\nconst RepoList = ({ data = [] }) => {\r\n\r\n    const renderContent = () => {\r\n        if (data.length === 0)\r\n            return (<NotFound />)\r\n        return (data?.map(d => (\r\n            <Col md={6} xs={12} style={{ padding: '20px' }} key={d.htmlUrl}>\r\n                <RepoItem name={d.name} description={d.description} htmlUrl={d.htmlUrl} />\r\n            </Col>\r\n        )))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title title={'List of repositories'} />\r\n            <Row>\r\n                {renderContent()}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RepoList","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchReposAPI } from \"../actions\";\r\nimport OrgList from '../components/OrgList'\r\nimport RepoList from \"../components/RepoList\";\r\n\r\nconst ListRepoAndOrg = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { repos, orgs, loading } = useSelector(state => state);\r\n    const [search, setSearch] = useState('');\r\n\r\n    return (\r\n        <Container>\r\n            <Form>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Control\r\n                            data-testid=\"search-input\"\r\n                            placeholder=\"Input Username\"\r\n                            onChange={e => setSearch(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <Button\r\n                            data-testid=\"search-btn\"\r\n                            onClick={() => {\r\n                                dispatch(fetchReposAPI(search));\r\n                            }}\r\n                            disabled={!search}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n            {loading ? (<Spinner animation=\"border\" variant=\"primary\" />) : (\r\n                <Row className=\"display-block\">\r\n                    <Col xs={12} className=\"padding-12\">\r\n                        <RepoList data={repos} />\r\n                    </Col>\r\n\r\n                    <Col xs={12} className=\"padding-12\">\r\n                        <OrgList data={orgs} />\r\n                    </Col>\r\n                </Row>)}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListRepoAndOrg;","import React from \"react\";\nimport \"./App.css\";\nimport ListRepoAndOrg from './containers'\n\nfunction App() {\n  return (\n    <div className=\"container-wrapper\">\n      <ListRepoAndOrg />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./index.css\";\r\nimport rootReducer from \"./reducers\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}